    AREA ONEZERO, CODE, READONLY ; Define a code section named ONEZERO

    ENTRY ; Mark first instruction to execute

START
    MOV R2, #0          ; Initialize counter for ones to 0
    MOV R3, #0          ; Initialize counter for zeros to 0
    MOV R7, #2          ; Counter to get two words from memory
    LDR R6, =VALUE      ; Load the address of VALUE into R6

LOOP
    MOV R1, #32         ; Initialize a counter for 32 bits
    LDR R0, [R6], #4    ; Load the 32-bit value from memory address in R6 into R0

LOOP0
    MOVS R0, R0, ROR #1 ; Rotate right R0 by 1 bit and update flags
    BHI ONES            ; If carry bit is 1 (indicating a 1), branch to ONES
    ADD R3, R3, #1      ; Otherwise, increment the zero counter
    B LOOP1             ; Branch to LOOP1

ONES
    ADD R2, R2, #1      ; Increment the ones counter
    B LOOP1             ; Branch to LOOP1

LOOP1
    SUBS R1, R1, #1     ; Decrement the bit counter
    BNE LOOP0           ; If R1 is not zero, continue the loop at LOOP0

    SUBS R7, R7, #1     ; Decrement the word counter
    CMP R7, #0          ; Compare R7 to 0

    BNE LOOP            ; If R7 is not zero, continue the loop at LOOP

BACK
    B BACK              ; Infinite loop to end the program

VALUE
    DCD 0x11111111, 0xAA55AA55 ; Define two 32-bit values in memory

END ; Mark end of file
